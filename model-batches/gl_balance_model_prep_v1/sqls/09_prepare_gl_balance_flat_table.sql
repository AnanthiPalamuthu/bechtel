insert overwrite table ${model_hive_schema_name}.${flat_table_name} 
select 
    ledger_name,
    ledger_short_name,
    ledger_description,
    ledger_category_code,
    alc_ledger_type_code,
    object_type_code,
    le_ledger_type_code,
    completion_status_code,
    configuration_id,
    chart_of_accounts_id,
    currency_code_ledger,
    period_set_name,
    accounted_period_type,
    first_ledger_period_name,
    transaction_calendar_id,
    daily_translation_rate_type,
    ledger_attributes,
    implicit_ledger_set_id,
    latest_opened_period_name,
    latest_encumbrance_year,
    period_average_rate_type,
    period_end_rate_type,
    budget_period_avg_rate_type,
    budget_period_end_rate_type,
    ledger_id,
    code_combination_id,
    currency_code,
    period_name,
    actual_flag,
    last_update_date,
    last_updated_by,
    budget_version_id,
    encumbrance_type_id,
    translated_flag,
    revaluation_status,
    period_type,
    period_year,
    period_num,
    coalesce(period_net_dr,0) period_net_dr,
    coalesce(period_net_cr,0) period_net_cr,
    coalesce(period_to_date_adb,0) period_to_date_adb,
    coalesce(quarter_to_date_dr,0) quarter_to_date_dr,
    coalesce(quarter_to_date_cr,0) quarter_to_date_cr,
    coalesce(quarter_to_date_adb,0) quarter_to_date_adb,
    coalesce(year_to_date_adb,0) year_to_date_adb,
    coalesce(project_to_date_dr,0) project_to_date_dr,
    coalesce(project_to_date_cr,0) project_to_date_cr,
    coalesce(project_to_date_adb,0) project_to_date_adb,
    coalesce(begin_balance_dr,0) begin_balance_dr,
    coalesce(begin_balance_cr,0) begin_balance_cr,
    coalesce(period_net_dr_beq,0) period_net_dr_beq,
    coalesce(period_net_cr_beq,0) period_net_cr_beq,
    coalesce(begin_balance_dr_beq,0) begin_balance_dr_beq,
    coalesce(begin_balance_cr_beq,0) begin_balance_cr_beq,
    template_id,
    encumbrance_doc_id,
    encumbrance_line_num,
    coalesce(quarter_to_date_dr_beq,0) quarter_to_date_dr_beq,
    coalesce(quarter_to_date_cr_beq,0) quarter_to_date_cr_beq,
    coalesce(project_to_date_dr_beq,0) project_to_date_dr_beq,
    coalesce(project_to_date_cr_beq,0) project_to_date_cr_beq,
    application_column_name,
    attribute_value,
    segment_attribute_type,
    seg_application_id,
    seg_id_flex_code,
    seg_id_flex_num,
    seg_application_column_name,
    segment_name,
    segment_num,
    seg_flex_value_set_id,
    seg_default_type,
    seg_default_value,
    code_chart_of_accounts_id,
    account_type,
    segment1,
    segment2,
    segment3,
    segment4,
    segment5,
    segment6,
    segment7,
    segment8,
    segment9,
    segment10,
    code_description,
    ledger_segment,
    ledger_type_code,
    flex_value_id,
    flex_value,
    compiled_value_attributes,
    substr(compiled_value_attributes,3,1) ledger_type_char,
    (case substr(compiled_value_attributes,3,1)
          when 'A' then 'Asset'
          when 'L' then 'Liability'
          when 'E' then 'Expense'
          when 'R' then 'Revenue'
          when 'O' then 'Stockholders Equity'
          else compiled_value_attributes end)  ledger_type,
    value_category,
    start_date_active,
    end_date_active,
    hierarchy_level,
    flex_value_meaning,
    flex_value_description,
    (coalesce(period_net_dr_beq,0) - coalesce(period_net_cr_beq,0))*-1 prd_amt,
    (coalesce(period_net_dr_beq,0) - coalesce(period_net_cr_beq,0) + coalesce(begin_balance_dr_beq,0) - coalesce(begin_balance_cr_beq,0))*-1 beg_amt,
    (coalesce(period_net_dr_beq,0) - coalesce(period_net_cr_beq,0) + coalesce(begin_balance_dr_beq,0) - coalesce(begin_balance_cr_beq,0))*-1 prj_amt,
    (coalesce(period_net_dr_beq,0) - coalesce(period_net_cr_beq,0))*-1 prd_funct_amt,
    (coalesce(period_net_dr_beq,0) - coalesce(period_net_cr_beq,0) + coalesce(begin_balance_dr_beq,0) - coalesce(begin_balance_cr_beq,0))*-1 beg_funct_amt
from 
    ${gl_balance_interim_cache}
where
unix_timestamp(${load.period.column.name},'${load.period.time.format}') >= unix_timestamp('Dec-16','${load.period.time.format}')
and 
unix_timestamp(${load.period.column.name},'${load.period.time.format}') <= unix_timestamp('Jun-17','${load.period.time.format}')
